{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAuCeA,MApCf,YAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EAEEC,mBAAS,IAFX,mBAE3BC,EAF2B,KAEfC,EAFe,KAoBlC,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAElB,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDC8BLO,EA5BM,SAACf,GAAc,IAAD,EAELd,mBAAS,CAC/BqB,KAAM,GACNS,SAAS,IAJkB,mBAExBC,EAFwB,KAEjBC,EAFiB,KAwB/B,OAfAC,qBAAU,WAENpB,EAAQC,GACHoB,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAItB,CAAChB,IAKGiB,GCbIK,MAZf,YAAqC,EAAfX,GAAgB,IAAbC,EAAY,EAAZA,MAAMV,EAAM,EAANA,IAI3B,OACI,sBAAKqB,UAAU,2DAAf,UACI,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QCkBDc,MAvBf,YAA8B,IAAZ1B,EAAW,EAAXA,SAAW,EAEMe,EAAaf,GAAhCa,EAFa,EAElBN,KAAaS,EAFK,EAELA,QAGpB,OACI,qCACI,oBAAIO,UAAU,oCAAd,SAAmDvB,IAElDgB,GAAW,mBAAGO,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SACKV,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCelBgB,MA7Bf,WAAyB,IAAD,EAGgBzC,mBAAS,CAAC,gBAH1B,mBAGbQ,EAHa,KAGDT,EAHC,KAUpB,OACI,qCACI,8CACI,cAAC,EAAD,CAAaA,cAAeA,IAChC,uBAIA,6BACKS,EAAWe,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCpBzB4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.43242327.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction AddCategory({setCategories}) {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('')\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} > \r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","  \r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=JXXqKqCgaMoiP2ciBXDZMHeCJlinH8SN`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n     \r\n        return  {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nconst useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state //{ data: [],loading: true }\r\n\r\n}\r\n\r\nexport default useFetchGifs;","import React from 'react'\r\n\r\nfunction GifGridItem({id,title,url}) {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nfunction GifGrid({category}) {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n  \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {images.map( img => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nfunction GifExpertApp() {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n    /* const handleAdd = () => {\r\n        setCategories([...categories, 'Hola']);\r\n        setCategories(cats => [...cats, 'Hola']);\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n                <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            \r\n\r\n            <ol>\r\n                {categories.map(category => (\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category}/>\r\n                ))}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}